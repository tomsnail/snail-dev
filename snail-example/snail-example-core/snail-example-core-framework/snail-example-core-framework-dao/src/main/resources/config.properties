system.iszkconfig=false

zk.address=127.0.0.1:2181
dubbo.server.port=8080


spring.datasource.name=dataSource
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.filters=stat
spring.datasource.druid.driver-class-name=${p.db.jdbc.driver}
spring.datasource.druid.url=${p.db.jdbc.url}
spring.datasource.druid.username=${p.db.jdbc.username}
spring.datasource.druid.password=${p.db.jdbc.password}
spring.datasource.druid.initial-size=${p.db.ds.initialSize}
spring.datasource.druid.min-idle=${p.db.ds.minIdle}
spring.datasource.druid.max-active=${p.db.ds.maxActive}
spring.datasource.druid.max-wait=${p.db.ds.maxWait}
spring.datasource.druid.time-between-eviction-runs-millis=${p.db.ds.timeBetweenEvictionRunsMillis}
spring.datasource.druid.min-evictable-idle-time-millis=${p.db.ds.minEvictableIdleTimeMillis}
spring.datasource.druid.validation-query=${p.db.ds.query}
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.pool-prepared-statements=false
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20


spring.datasource.name.router=dataSource
spring.datasource.name.router-name=mysql1,mysql2
spring.datasource.name.router-type=MULTI_TYPE_DB
spring.datasource.name.router-default=mysql1

spring.datasource.druid.filters.mysql1=stat
spring.datasource.druid.driver-class-name.mysql1=${p.db.jdbc.driver}
spring.datasource.druid.url.mysql1=${p.db.jdbc.url.mysql1}
spring.datasource.druid.username.mysql1=${p.db.jdbc.username.mysql1}
spring.datasource.druid.password.mysql1=${p.db.jdbc.password.mysql1}
spring.datasource.druid.initial-size.mysql1=${p.db.ds.initialSize}
spring.datasource.druid.min-idle.mysql1=${p.db.ds.minIdle}
spring.datasource.druid.max-active.mysql1=${p.db.ds.maxActive}
spring.datasource.druid.max-wait.mysql1=${p.db.ds.maxWait}
spring.datasource.druid.time-between-eviction-runs-millis.mysql1=${p.db.ds.timeBetweenEvictionRunsMillis}
spring.datasource.druid.min-evictable-idle-time-millis.mysql1=${p.db.ds.minEvictableIdleTimeMillis}
spring.datasource.druid.validation-query.mysql1=${p.db.ds.query}
spring.datasource.druid.test-while-idle.mysql1=true
spring.datasource.druid.test-on-borrow.mysql1=false
spring.datasource.druid.test-on-return.mysql1=false
spring.datasource.druid.pool-prepared-statements.mysql1=false
spring.datasource.druid.max-pool-prepared-statement-per-connection-size.mysql1=20

spring.datasource.druid.filters.mysql2=stat
spring.datasource.druid.driver-class-name.mysql2=${p.db.jdbc.driver}
spring.datasource.druid.url.mysql2=${p.db.jdbc.url.mysql2}
spring.datasource.druid.username.mysql2=${p.db.jdbc.username.mysql2}
spring.datasource.druid.password.mysql2=${p.db.jdbc.password.mysql2}
spring.datasource.druid.initial-size.mysql2=${p.db.ds.initialSize}
spring.datasource.druid.min-idle.mysql2=${p.db.ds.minIdle}
spring.datasource.druid.max-active.mysql2=${p.db.ds.maxActive}
spring.datasource.druid.max-wait.mysql2=${p.db.ds.maxWait}
spring.datasource.druid.time-between-eviction-runs-millis.mysql2=${p.db.ds.timeBetweenEvictionRunsMillis}
spring.datasource.druid.min-evictable-idle-time-millis.mysql2=${p.db.ds.minEvictableIdleTimeMillis}
spring.datasource.druid.validation-query.mysql2=${p.db.ds.query}
spring.datasource.druid.test-while-idle.mysql2=true
spring.datasource.druid.test-on-borrow.mysql2=false
spring.datasource.druid.test-on-return.mysql2=false
spring.datasource.druid.pool-prepared-statements.mysql2=false
spring.datasource.druid.max-pool-prepared-statement-per-connection-size.mysql2=20
 
mybatis.mapper-locations=classpath:com/tomsnail/framework/example/dao/*.xml
mybatis.type-aliases-package=cn.tomsnail.snail.example.core.framework.model
mybatis.mapper-scanners=com.tomsnail.framework.example.dao






#exec:java -Dexec.mainClass="cn.tomsnail.snail.core.starter.AppMain"

#exec:java -Dexec.mainClass="cn.tomsnail.snail.core.starter.AppMain" -Dexec.args="applicationConextClient.xml"
