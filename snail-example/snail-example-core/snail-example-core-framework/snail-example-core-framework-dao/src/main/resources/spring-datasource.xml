<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/jdbc
    http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util.xsd
    http://code.alibabatech.com/schema/dubbo
    http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
    

    <bean class="cn.tomsnail.snail.core.objsql.annotation.MyBatisAnnotation"></bean>
    
    
	<!-- dataSource 配置 -->
	<bean id="dataSource0" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${p.db0.jdbc.url}" />
		<property name="username" value="${p.db0.jdbc.username}" />
		<property name="password" value="${p.db0.jdbc.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${p.db0.ds.initialSize}" />
		<property name="minIdle" value="${p.db0.ds.minIdle}" />
		<property name="maxActive" value="${p.db0.ds.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${p.db0.ds.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${p.db0.ds.timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${p.db0.ds.minEvictableIdleTimeMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="validationQuery" value="${p.db0.ds.query}" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="false" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="wall" />
	</bean>
	
	
		
	
	
	<bean id="dataSource" class="cn.tomsnail.snail.core.ds.router.RountingDataSource">
		<property name="routeType" value="MULTI_TYPE_DB"></property>
        <property name="targetDataSources">      
          <map key-type="java.lang.String">
             <entry key="mysql" value-ref="dataSource0"/>   
          </map>               
        </property> 
		<property name="defaultTargetDataSource" ref="dataSource0"/>
	</bean>
	<!-- mybatis文件配置，扫描所有mapper文件 -->
                    
 	<bean id="sqlSessionFactory0" class="org.mybatis.spring.SqlSessionFactoryBean">
           <property name="dataSource" ref="dataSource"/>   
           <property name="configLocation" value="classpath:mybatis-config.xml"/>       
           <property name="mapperLocations">            
             	<list>      
             		<value>classpath:cn/tomsnail/snail/example/core/framework/dao/*.xml</value>          
             	</list>         
           </property>
    </bean>  

    <!-- spring与mybatis整合配置，扫描所有dao -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" p:basePackage="cn.tomsnail.snail.example.core.framework.dao"
          p:sqlSessionFactoryBeanName="sqlSessionFactory0"/>

    <!-- 对dataSource 数据源进行事务管理 -->
    <bean id="transactionManager0" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>

    <!-- 启用对事务注解的支持 -->
    <tx:annotation-driven transaction-manager="transactionManager0"/>
	
</beans>